# TAKEN FROM akka-samples/akka-sample-persistence-scala/src/main/resources/application.conf
akka.persistence.journal.leveldb.dir = "target/example/journal"
akka.persistence.snapshot-store.local.dir = "target/example/snapshots"

# DO NOT USE THIS IN PRODUCTION !!!
# See also https://github.com/typesafehub/activator/issues/287
akka.persistence.journal.leveldb.native = false

# TAKEN FROM README in https://github.com/romix/akka-kryo-serialization
akka.extensions = ["com.romix.akka.serialization.kryo.KryoSerializationExtension$"]
akka.actor {
  kryo  {
    # Possibles values for type are: graph or nograph
    # graph supports serialization of object graphs with shared nodes
    # and cyclic references, but this comes at the expense of a small overhead
    # nograph does not support object grpahs with shared nodes, but is usually faster
    type = "graph"

    # Possible values for idstrategy are:
    # default, explicit, incremental
    #
    # default - slowest and produces bigger serialized representation. Contains fully-
    # qualified class names (FQCNs) for each class
    #
    # explicit - fast and produces compact serialized representation. Requires that all
    # classes that will be serialized are pre-registered using the "mappings" and "classes"
    # sections. To guarantee that both sender and receiver use the same numeric ids for the same
    # classes it is advised to provide exactly the same entries in the "mappings" section
    #
    # incremental - fast and produces compact serialized representation. Support optional
    # pre-registering of classes using the "mappings" and "classes" sections. If class is
    # not pre-registered, it will be registered dynamically by picking a next available id
    # To guarantee that both sender and receiver use the same numeric ids for the same
    # classes it is advised to pre-register them using at least the "classes" section

    idstrategy = "incremental"

    # Define a default size for serializer pool
    # Try to define the size to be at least as big as the max possible number
    # of threads that may be used for serialization, i.e. max number
    # of threads allowed for the scheduler
    serializer-pool-size = 16

    # Define a default size for byte buffers used during serialization
    buffer-size = 4096

    # If set, akka uses manifests to put a class name
    # of the top-level object into each message
    use-manifests = false

    # Enable transparent compression of serialized messages
    # accepted values are: off | lz4 | deflate
    compression = off

    # Log implicitly registered classes. Useful, if you want to know all classes
    # which are serialized. You can then use this information in the mappings and/or
    # classes sections
    implicit-registration-logging = false

    # If enabled, Kryo logs a lot of information about serialization process.
    # Useful for debugging and lowl-level tweaking
    kryo-trace = false

    # If proviced, Kryo uses the class specified by a fully qualified class name
    # to perform a custom initialization of Kryo instances in addition to what
    # is done automatically based on the config file.
    kryo-custom-serializer-init = "sample.persistence.KryoInit"
      #"CustomKryoSerializerInitFQCN"

    # Define mappings from a fully qualified class name to a numeric id.
    # Smaller ids lead to smaller sizes of serialized representations.
    #
    # This section is mandatory for idstartegy=explciit
    # This section is optional  for idstartegy=incremental
    # This section is ignored   for idstartegy=default
    #
    # The smallest possible id should start at 20 (or even higher), because
    # ids below it are used by Kryo internally e.g. for built-in Java and
    # Scala types
    mappings {
      "org.joda.time.DateTime" = 30,
      "sample.persistence.Evt" = 31
    }

    # Define a set of fully qualified class names for
    # classes to be used for serialization.
    # The ids for those classes will be assigned automatically,
    # but respecting the order of declaration in this section
    #
    # This section is optional  for idstartegy=incremental
    # This section is ignored   for idstartegy=default
    # This section is optional  for idstartegy=explicit
    #classes = [
    #  "package3.name3.className3",
    #  "package4.name4.className4"
    #]
  }

  serializers {
    kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
  }

  serialization-bindings {
    "org.joda.time.DateTime" = kryo
    "sample.persistence.Evt" = kryo
  }
}